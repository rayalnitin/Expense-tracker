{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","ExpenseDate","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpensesFilter","selected","onChangeFilter","ExpenseList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88ec806a.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState('');\r\n  const [enteredAmount, setEnteredAmount] = useState('');\r\n  const [enteredDate, setEnteredDate] = useState('');\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: '',\r\n  //   enteredAmount: '',\r\n  //   enteredDate: '',\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //   return { ...prevState, enteredTitle: event.target.value };\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredAmount: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredDate: event.target.value,\r\n    // });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredTitle('');\r\n    setEnteredAmount('');\r\n    setEnteredDate('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className='new-expense__controls'>\r\n        <div className='new-expense__control'>\r\n          <label>Title</label>\r\n          <input\r\n            type='text'\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Amount</label>\r\n          <input\r\n            type='number'\r\n            min='0.01'\r\n            step='0.01'\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n        <div className='new-expense__control'>\r\n          <label>Date</label>\r\n          <input\r\n            type='date'\r\n            min='2019-01-01'\r\n            max='2022-12-31'\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className='new-expense__actions'>\r\n        <button type='button' onClick={props.onCancel}>Cancel</button>\r\n        <button type='submit'>Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;","import React , { useState} from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n\r\n  const[isEditing , setIsEditing] = useState(false);\r\n\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString()\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n \r\n  const startEditingHandler = () => {\r\n     setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n     setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className='new-expense'>\r\n      {!isEditing &&  (<button onClick={startEditingHandler}>Add New Expense</button>) }\r\n      {isEditing &&(\r\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}\r\n         onCancel = {stopEditingHandler} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;","import './ExpenseDate.css';\r\n\r\nfunction ExpenseDate(props){\r\n    const month= props.date.toLocaleString('en-US' , {month: 'long'})\r\n    const day = props.date.toLocaleString('en-US' , {day: '2-digit'});\r\n    const year= props.date.getFullYear();   \r\n\r\n    return (\r\n   <div className='expense-date'>\r\n     <div className='expense-date__month'>{ month} </div>\r\n     <div className='expense-date__year'>{year}</div>\r\n     <div className='expense-date__day'>{day}</div> \r\n   </div>   \r\n    ); \r\n}\r\n\r\nexport default ExpenseDate;","import './Card.css';\r\n\r\nfunction Card(props) {\r\n  const classes = 'card ' + props.className;\r\n  \r\n  return <div className={classes}>{props.children}</div>;\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n    <Card className='expense-item'>\r\n      <ExpenseDate date={props.date} />\r\n      <div className='expense-item__description'>\r\n        <h2>{props.title}</h2>\r\n        <div className='expense-item__price'>${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n    </li>\r\n    \r\n  );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\n\r\nimport './ExpenseFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n\r\n    const dropdownChangeHandler = (event) => {\r\n          props.onChangeFilter(event.target.value);\r\n    }\r\n\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value='2022'>2022</option>\r\n          <option value='2021'>2021</option>\r\n          <option value='2020'>2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './ExpenseList.css';\r\nimport React from 'react';\r\nimport ExpenseItem from './ExpenseItem';\r\n\r\nconst ExpenseList = props => {\r\n\r\n    // let expensesContent = <p>No expenses found.</p>;\r\n\r\n    // if(props.items.length > 0){\r\n    //   expensesContent = filteredExpenses.map((expense) => (\r\n    //     <ExpenseItem\r\n    //       key = {expense.id}\r\n    //       title={expense.title}\r\n    //       amount={expense.amount}\r\n    //       date={expense.date}\r\n    //     />\r\n    //   ));\r\n    // }\r\n    if(props.items.length === 0){\r\n            return <h2 className='expenses-list__fallback'>Found no expenses</h2>\r\n    }\r\n    return (\r\n        <ul className='expenses-list'>\r\n        {props.items.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.title}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import './ChartBar.css';\r\nimport React from 'react';\r\n\r\nconst ChartBar = (props) => {\r\n    let barFillHeight = '0%';\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue)*100) + '%';\r\n    }\r\n     return (\r\n         <>\r\n           <div className='chart-bar'>\r\n                <div className='chart-bar__inner'>\r\n                     <div className='chart-bar__fill' style={{height : barFillHeight}}>\r\n                     </div>\r\n                </div>\r\n                <div className='chart-bar__label'>{props.label}</div>\r\n           </div>\r\n         </>\r\n     );\r\n};\r\n\r\nexport default ChartBar;","import './Chart.css';\r\nimport ChartBar from './ChartBar';\r\nimport react from 'react';\r\n\r\nconst Chart = (props) => {\r\n\r\n       const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n       const totalMaximum = Math.max(...dataPointValues)\r\n\r\n       return(\r\n        <>\r\n        <div className='chart'>\r\n           {props.dataPoints.map(dataPoint => \r\n           <ChartBar \r\n            key={dataPoint.label}\r\n            value={dataPoint.value} \r\n            maxValue={totalMaximum} \r\n            label={dataPoint.label} />)}\r\n        </div>\r\n       </>\r\n       );\r\n};\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\n\r\nconst ExpensesChart = (props) => {\r\n   const chartDataPoints = [\r\n     {label: 'Jan' , value:0},\r\n     {label: 'Feb' , value:0},\r\n     {label: 'Mar' , value:0},\r\n     {label: 'Apr' , value:0},\r\n     {label: 'May' , value:0},\r\n     {label: 'Jun' , value:0},\r\n     {label: 'Jul' , value:0},\r\n     {label: 'Aug' , value:0},\r\n     {label: 'Sep' , value:0},\r\n     {label: 'Oct' , value:0},\r\n     {label: 'Nov' , value:0},\r\n     {label: 'Dec' , value:0}\r\n   ];\r\n   for(const expense of props.expenses){\r\n       const expenseMonth = expense.date.getMonth(); // starting at 0 => January\r\n       chartDataPoints[expenseMonth].value += expense.amount;\r\n   }\r\n    return (\r\n        <Chart dataPoints={chartDataPoints}/>\r\n    );\r\n};\r\n\r\nexport default ExpensesChart;","import React, { useState } from 'react';\r\n\r\nimport ExpenseItem from './ExpenseItem';\r\nimport Card from '../UI/Card';\r\nimport ExpenseFilter from './ExpenseFilter';\r\nimport './Expenses.css';\r\nimport ExpenseList from './ExpenseList';\r\nimport ExpensesChart from './ExpensesChart';\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter(expense =>{\r\n      return expense.date.getFullYear().toString() === filteredYear ;\r\n  });\r\n  \r\n  return (\r\n    <div>\r\n      <Card className='expenses'>\r\n        <ExpenseFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses}/>\r\n        <ExpenseList items={filteredExpenses}/>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}